#
# Tweaked from:
# - https://github.com/envoyproxy/envoy/blob/main/examples/ext_authz/config/grpc-service/v3.yaml
#
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        # Envoy entry point to forward HTTP calls to the target service.
        port_value: 8181
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service
          http_filters:
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              grpc_service:
                envoy_grpc:
                  cluster_name: ext_authz-grpc-service
                # Give requests more than a day to complete. Stops the go
                # context timing out when debugging the service. Plus we
                # still don't know how fast Anubis is, so let's stop this
                # filter from timing out after a handful of millis.
                timeout: 100000.250s
              transport_api_version: V3
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                filename: /etc/envoy/lua/http-filter.lua
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: upstream-service
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # Target service.
                # Note we force IPv4 instead of "localhost". That's to avoid
                # a situation where Envoy tries connecting to the target
                # service through IPv6 but the service only accepts IPv4
                # connections. In this scenario Envoy would return a cryptic
                # "503 Service Unavailable" and you'd need to roll out good
                # ol' tcpdump to figure all that out...
                address: 0.0.0.0
                port_value: 8080
  - name: ext_authz-grpc-service
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: ext_authz-grpc-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # OPA service.
                address: opa
                port_value: 9191
